apply plugin: 'com.android.application'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-kapt'
apply plugin: 'org.sonarqube'
//apply plugin: 'jacoco-android'
apply plugin: 'androidx.navigation.safeargs'
apply plugin: "org.jmailen.kotlinter"

repositories {
    mavenCentral()
    maven {
        url "https://jitpack.io"
    }
    maven {
        url "https://oss.sonatype.org/content/repositories/snapshots"
    }
}

android {
    compileOptions {
        sourceCompatibility = 1.8
        targetCompatibility = 1.8
    }

    kotlinOptions {
        jvmTarget = "1.8"
    }

    dataBinding {
        enabled = true
    }

    androidExtensions {
        experimental = true
    }

    compileSdkVersion rootProject.ext.compileSdkVersion
    buildToolsVersion rootProject.ext.buildToolsVersion
    defaultConfig {
        applicationId "com.ufms.mediadorpedagogico"
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        minSdkVersion rootProject.ext.minSdkVersion
        targetSdkVersion rootProject.ext.targetSdkVersion
        versionCode rootProject.ext.versionCode
        versionName rootProject.ext.versionName
        vectorDrawables.useSupportLibrary = true
        multiDexEnabled true
    }

    lintOptions {
        xmlReport true
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android.txt'), 'proguard-rules.pro'
            buildConfigField "String", "API_ENDPOINT", "\"$rootProject.ext.apiRelease\""
            resValue "string", "app_name", rootProject.ext.appName
        }

        staging {
            initWith(buildTypes.release)
            buildConfigField "String", "API_ENDPOINT", "\"$rootProject.ext.apiStaging\""
            resValue "string", "app_name", "\"$rootProject.ext.appName [staging]\""
        }

        debug {
            buildConfigField "String", "API_ENDPOINT", "\"$rootProject.ext.apiStaging\""
            resValue "string", "app_name", "\"$rootProject.ext.appName [debug]\""
            testCoverageEnabled = true
        }
    }

    testOptions {
        unitTests.returnDefaultValues = true
        unitTests {
            includeAndroidResources = true
        }
    }

//    testOptions {
//        unitTests.all {
//            jacoco {
//                includeNoLocationClasses = true
//            }
//        }
//
//    }
}

//jacocoAndroidUnitTestReport {
//    csv.enabled false
//    html.enabled false
//    xml.enabled true
//}

kotlinter {
    ignoreFailures = true
    disabledRules = ["no-wildcard-imports", "comment-spacing", "final-newline"]
}

task runChecksForDanger() {
    group = "Reporting"
    dependsOn 'lintKotlin'

    def file = file("${project.rootDir}/build/reports/ktlint")
    if (!file.exists()) file.mkdirs()
    def lintFile = new File("${project.rootDir}/build/reports/lint")
    if (!lintFile.exists()) lintFile.mkdirs()
}

dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    // android support
    implementation 'androidx.appcompat:appcompat:1.0.2'
    implementation 'com.google.android.material:material:1.0.0'
    implementation 'androidx.constraintlayout:constraintlayout:1.1.3'

    //google
    implementation 'com.google.firebase:firebase-analytics:17.2.0'
    implementation 'com.google.firebase:firebase-messaging:20.0.0'


    // retrofit
    implementation 'com.squareup.retrofit2:retrofit:2.4.0'
    api 'com.squareup.retrofit2:converter-gson:2.4.0'
    implementation 'com.jakewharton.retrofit:retrofit2-rxjava2-adapter:1.0.0'
    implementation 'com.squareup.okhttp3:logging-interceptor:3.12.1'

    //rx
    implementation 'io.reactivex.rxjava2:rxandroid:2.1.1'
    implementation 'io.reactivex.rxjava2:rxkotlin:2.1.0'

    // room
    kapt 'androidx.room:room-compiler:2.1.0'
    api 'androidx.room:room-runtime:2.1.0'
    implementation 'androidx.room:room-rxjava2:2.1.0'

    // kotlin
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk7:$rootProject.ext.kotlinVersion"

    // Kotlin Reflection
    implementation "org.jetbrains.kotlin:kotlin-reflect:1.3.41"

    // multidex
    implementation 'androidx.multidex:multidex:2.0.1'

    // glide
    implementation "com.github.bumptech.glide:glide:$glideVersion"
    kapt "com.github.bumptech.glide:compiler:$glideVersion"

    // LiveData + ViewModel
    implementation 'androidx.lifecycle:lifecycle-extensions:2.0.0'

    // easy image
    implementation 'com.github.jkwiecien:EasyImage:2.0.3'

    //rx permissions
    implementation 'com.github.tbruyelle:rxpermissions:0.10.2'

    implementation "org.koin:koin-core:$koinVersion"
    implementation "org.koin:koin-android-viewmodel:$koinVersion"

    compile('com.github.worker8:tourguide:2.0.0-SNAPSHOT@aar') {
        transitive = true
    }

    // Testing
    androidTestImplementation "org.koin:koin-test:$koinVersion"

    androidTestImplementation 'androidx.test:runner:1.2.0'
    androidTestImplementation 'androidx.test:rules:1.2.0'
    testImplementation 'androidx.test:core:1.2.0'

    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"
    testImplementation "org.koin:koin-test:$koinVersion"

    // required if you want to use Mockito for unit tests
    testImplementation 'org.mockito:mockito-core:2.7.22'
    // required if you want to use Mockito for Android tests
    testImplementation 'org.assertj:assertj-core:3.12.2'
    testImplementation 'org.robolectric:robolectric:4.3'

    //Stetho
    implementation "com.facebook.stetho:stetho:$stethoVersion"
    implementation 'com.dicedmelon.gradle:jacoco-android:0.1.4'
    implementation 'androidx.navigation:navigation-fragment-ktx:2.1.0'
    implementation 'androidx.navigation:navigation-ui-ktx:2.1.0'
}

sonarqube {
    properties {
        property "sonar.projectName", "Mediador pedagogico"
        property "sonar.projectKey", "com.ufms.mediadorpedagogico"
        property "sonar.host.url", "http://localhost:9000"
        property "sonar.language", "kotlin"
        property "sonar.sources", "src/main/"
        property "sonar.login", "admin"
        property "sonar.password", "admin"

        property "sonar.sources", "src/main/java"
        property "sonar.binaries", "build/intermediates/classes/debug"
        property "sonar.java.binaries", "build/intermediates/classes/debug"
        property "sonar.java.test.binaries", "build/intermediates/classes/debug"
//
//        property "sonar.java.coveragePlugin", "jacoco"
//        property "sonar.junit.reportsPath", "build/test-results/testDebugUnitTest"
//        property "sonar.android.lint.report", "build/reports/lint-results.xml"
    }
}
apply plugin: 'com.google.gms.google-services'